---
kind: pipeline
name: test-and-publish

steps:
  - name: fetch-tags
    image: docker:git
    commands:
      - git fetch --tags

  - name: restore-cache
    image: drillster/drone-volume-cache
    settings:
      restore: true
      mount:
        - .gcache/wrapper
        - .gcache/caches/modules-2
      ttl: 21
      cache_key: [ DRONE_REPO_OWNER, DRONE_REPO_NAME ]
    volumes:
      - name: host-cache
        path: /cache

  - name: check-versions
    image: openjdk:8-jdk
    environment:
      GRADLE_USER_HOME: .gcache
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
    commands:
      - ./gradlew versionCheck
    when:
      branch:
        exclude:
          - master
      event:
        - push

  - name: unit-test
    image: openjdk:8-jdk-slim
    environment:
      GRADLE_USER_HOME: .gcache
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
    commands:
      - echo $${DRONE_MACHINE}
      - ./gradlew test check

  - name: save-cache
    image: drillster/drone-volume-cache
    settings:
      rebuild: true
      mount:
        - .gcache/wrapper
        - .gcache/caches/modules-2
      cache_key: [ DRONE_REPO_OWNER, DRONE_REPO_NAME ]
    volumes:
      - name: host-cache
        path: /cache

  - name: publish-to-s3
    image: openjdk:8-jdk
    environment:
      GRADLE_USER_HOME: .gcache
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
      AWS_ACCESS_KEY_ID:
        from_secret: aws-publish-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws-publish-secret
    commands:
      - ./gradlew --info publish -x check -x test
    when:
      branch:
        include:
          - master

volumes:
  - name: host-cache
    host:
      # expects agent to have /tmp/cache directory created
      path: /tmp/cache

trigger:
  event:
    - push

---
kind: pipeline
name: mirror-to-github
depends_on:
  - test-and-publish

steps:
  - name: github-push
    image: alpine/git
    environment:
      GITHUB_SSH_KEY_B64:
        from_secret: github-ssh-key-b64
    commands:
      - ./mirror.sh
    when:
      branch:
        include:
          - master

trigger:
  event:
    - push

---
kind: secret
name: aws-publish-id
get:
  path: drone/publish/s3
  name: aws-publish-id

---
kind: secret
name: aws-publish-secret
get:
  path: drone/publish/s3
  name: aws-publish-secret

---
kind: secret
name: github-ssh-key-b64
get:
  path: drone/publish/github/inpro-jira
  name: gh-jira-key-b64
