/*
 * Copyright (c) 2018 Practice Insight Pty Ltd. All Rights Reserved.
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            // WT published releases
            url 'https://s3.eu-central-1.amazonaws.com/artifacts.wisetime.com/mvn2/plugins'
            content {
                includeGroup "io.wisetime"
            }
        }
    }
    dependencies {
        // https://github.com/GoogleContainerTools/jib/issues/1018
        classpath('org.apache.httpcomponents:httpclient:4.0.1') {
            force = true
        }
    }
}

plugins {
    id 'java'
    id 'application'
    id "fr.brouillard.oss.gradle.jgitver" version "0.8.0"
    id 'maven'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib' version '1.1.2'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id "com.github.ben-manes.versions" version '0.21.0'
    id 'net.ltgt.apt' version '0.21'
    id 'io.wisetime.versionChecker' version '0.7.10'
}

apply from: "$rootDir/gradle/conf/checkstyle.gradle"
apply from: "$rootDir/gradle/conf/jacoco.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'io.wisetime'
archivesBaseName = 'wisetime-jira-connector'
mainClassName = 'io.wisetime.connector.jira.ConnectorLauncher'

jib {
    def targetArch = project.hasProperty('targetArch') ? project.targetArch : ''

    if (targetArch == 'arm64v8') {
        println 'building image with architecture: arm64v8'
        from {
            image = "arm64v8/openjdk:8-alpine"
        }
        to {
            image = "wisetime/wisetime-jira-connector-arm64v8"
        }
    } else {
        println 'building image with (default) architecture: amd64'
        to {
            image = "wisetime/wisetime-jira-connector"
        }
    }
}

repositories {
    maven {
        // Google Maven Central mirror
        url 'https://maven-central.storage-download.googleapis.com/repos/central/data'
    }
    maven {
        // WiseTime artifacts
        url 'https://s3.eu-central-1.amazonaws.com/artifacts.wisetime.com/mvn2/releases'
        content {
            includeGroup 'io.wisetime'
        }
    }
}

tasks.jib.dependsOn compileJava

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

ext.jacocoLimits = [
        'instruction': 85,
        'line'       : 85,
        'method'     : 80,
        'class'      : 85
]

def taskRequestString = getGradle().getStartParameter().getTaskRequests().toString()
if (taskRequestString.contains("dependencyUpdates") || taskRequestString.contains("versionCheck")) {
    // add exclusions for reporting on updates and vulnerabilities
    apply from: "$rootDir/gradle/versionPluginConfig.gradle"
}

dependencies {
    compile 'io.wisetime:wisetime-connector:2.2.4'
    compile('com.google.inject:guice:4.2.2:no_aop') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile 'com.google.guava:guava:27.1-jre'

    compile 'org.codejargon:fluentjdbc:1.8.3'
    compile 'com.zaxxer:HikariCP:3.3.1'
    compile 'mysql:mysql-connector-java:5.1.44'
    compile 'org.postgresql:postgresql:42.2.5'

    compileOnly "org.immutables:value:2.7.5:annotations"
    annotationProcessor "org.immutables:value:2.7.5"

    testCompile 'org.junit.jupiter:junit-jupiter:5.4.2'
    testCompile 'org.mockito:mockito-core:2.27.0'
    testCompile 'org.assertj:assertj-core:3.12.2'
    testCompile ('com.github.javafaker:javafaker:0.17.2') {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    }
    testCompile 'org.flywaydb:flyway-core:5.1.1'
    testRuntime 'com.h2database:h2:1.4.199'
}

test {
    useJUnitPlatform()
    testLogging {
        // "passed", "skipped", "failed"
        events 'skipped', 'failed'
    }
}

clean {
    delete "${projectDir}/out"
}

jgitver {
    autoIncrementPatch false
}

publishing {
    repositories {
        maven {
            url 's3://artifacts.wisetime.com/mvn2/releases'
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId 'wisetime-jira-connector'
            // version is set via plugin
            from components.java
        }
    }
}
